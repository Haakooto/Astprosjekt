This week weve been struggeling with getting the orbits right. We plots these using the analytical formula based on given properties. We iterate the orbits using gravity. Lastly  we use derivation to find the angle as function of time, and do same as with analytical formula, but this can actually tell us where planets are at time T.

All three methods gave wrong results, but after a few hours tonight i fixed them all. The analytic fix as adding pi to semi_major_axes_angles. Exactly why this works I dont get yet, but I saw semi_major_axis as on other side of system than we would expect when I didnt add angles for them, so adding pi would take the angle to where we thought they were. And it worked.

The reason I know its right now is because they line up with simulated orbits. When verifying these we got around 8% wrong, and we tried for a loong time to wix this. Smaller dt didnt help, neither did doing funky things with the formulas. The solution that finally got our result to an acceptable level, around 0.02% wrong, was assuming that the mass of the start plus the mass of a planet equal the mass of the star. A reasonable assumption, idea gotten from Frode in a lecture, but wed tried this, and didnt work then. Dont remeber what I did then, but after that ive done something to get error down further, so that when i retried that assumption it worked.

Tobias derived a formula for d_theta/dt. Implementing a solver for this differential equaltion was easy, but yielded wrong results. The orbits had way to large radius. Reading through the code i found we had used semi_major_axes_angles insted of semi_major_axis, and when this was fixed; magic.